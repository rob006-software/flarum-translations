{
    "clarkwinkelmann-jwt-cookie-login": {
        "admin": {
            "settings": {
                "cookieName": "Cookie-Name",
                "actorId": "Flarum-Benutzer-ID für administrative Aktionen",
                "actorIdHelp": "Dieser Flarum-Benutzer wird als Akteur für die interne REST-API-Anforderung verwendet, die neue Benutzer erstellt. Es muss ein Admin-Benutzer sein.\n",
                "audience": "JWT-Zielgruppe/Firebase-Projekt-ID",
                "audienceHelp": "Validiert das <code>aud</code>-Attribut des Tokens. Optional, wenn Firebase nicht verwendet wird",
                "publicKey": "Öffentlicher Schlüssel",
                "publicKeyHelp": "Leer lassen, um Google Firebase-Schlüssel zu verwenden",
                "publicKeyAlgorithm": "Public-Key-Algorithmus",
                "publicKeyAlgorithmHelp": "Nur bei Public Key erforderlich. Beispiel: RS256",
                "expirationLeeway": "Ablaufspielraum (Sekunden)",
                "expirationLeewayHelp": "Wie viele zusätzliche Sekunden nach dem JWT-Ablauf soll die Sitzung noch starten. Dieser Wert soll im schlimmsten Fall nur wenige Minuten betragen, um Zeitverschiebungen zwischen Servern zu berücksichtigen. Es kann jedoch auch auf einen viel längeren Wert gesetzt werden, wenn dies die einzige Möglichkeit ist, feste kurze Lebensdauern von JWT aus einer externen Bibliothek zu umgehen.\n",
                "usernameTemplate": "Vorlage für Benutzernamen",
                "usernameTemplateHelp": "Verwende die <code>{sub}</code>-Syntax, um ein Attribut aus dem JWT zu verwenden",
                "emailTemplate": "E-Mail-Vorlage",
                "emailTemplateHelp": "Verwende die <code>{sub}</code>-Syntax, um ein Attribut aus dem JWT zu verwenden",
                "registrationHook": "Registrierungs-Hook-Endpunkt",
                "registrationHookHelp": "Eine vollständig qualifizierte URL, die mit einer POST-Anfrage getroffen wird, wenn ein Benutzer das Forum zum ersten Mal besucht. Die Anfrage sollte eine JSON:API-Nutzlast zurückgeben, die zum Erstellen des neuen Benutzers in Flarum verwendet wird. Verwenden Sie die <code>{sub}</code>-Syntax, um ein Attribut aus dem JWT in der URL zu verwenden. Das vollständige JWT wird im <code>Authorization</code>-Header übergeben. Benutzername und E-Mail sind optional, wenn ein Vorlagenwert konfiguriert ist.\n",
                "authorizationHeader": "Kopfzeilenwert für benutzerdefinierte Autorisierung",
                "authorizationHeaderHelp": "Wenn dieses Feld leer gelassen wird, enthält der <code>Authorization</code>-Header das <code>JWT-Token</code>.",
                "hiddenIframe": "Versteckte Iframe-URL",
                "hiddenIframeHelp": "Dieser iFrame wird auf allen Seiten der Flarum-Einzelseitenanwendung außerhalb des Bildschirms geladen. Es kann verwendet werden, um das Cookie regelmäßig zu aktualisieren, und kann Browsernachrichten verwenden, um eine Seitenaktualisierung für die automatische Anmeldung oder automatische Abmeldung auszulösen. Siehe README für die Dokumentation.\n",
                "autoLoginDelay": "Versteckte automatische Iframe-Anmeldeverzögerung (Millisekunden)",
                "autoLoginDelayHelp": "Wie viele Sekunden darf die Seite ohne Benutzerinteraktion aktualisiert werden, wenn der versteckte Iframe einen angemeldeten Status zurückgibt. Nach dieser Verzögerung erhält der Benutzer eine Benachrichtigung, in der er gefragt wird, ob er die Seite aktualisieren möchte.\n",
                "logoutRedirect": "Abmelde-Umleitungs-URL",
                "logoutRedirectHelp": "Während einer zustandslosen JWT-Sitzung wird der Abmeldelink von Flarum durch einen Link ersetzt, der auf diese URL verweist. Wenn kein Wert festgelegt ist, wird die Abmeldeschaltfläche ausgeblendet.\n"
            }
        },
        "forum": {
            "alert": {
                "refresh": "Seite neu laden",
                "login": "Du wurdest automatisch verbunden.",
                "logout": "Deine Sitzung ist abgelaufen."
            }
        }
    }
}
